{"ast":null,"code":"import { cartActionTypes } from \"./cart.types\";\nimport { addItemAndQuantityToCart, addItemToCart, checkedAllItems, checkedItem, decreaseItemQuantity, deleteItemFromCart, increaseItemQuantity } from \"./cart.utils\";\nconst {\n  ADD_ITEM,\n  ADD_ITEM_WITH_QUANTITY,\n  DELETE_ITEM,\n  DELETE_ALL_ITEM,\n  CHECKED_ITEM,\n  CHECKED_ALL_ITEM,\n  INCREASE_ITEM_QUANTITY,\n  DECREASE_ITEM_QUANTITY,\n  SET_DELIVERY_TYPE,\n  SET_PAYMENT_TYPE,\n  STATE_ITEM_TO_NEXT,\n  STATE_ITEMS_TO_NEXT,\n  FINISHED_TRANSACTION\n} = cartActionTypes;\nconst INITIAL_STATE = {\n  cartItems: [],\n  deliveryType: [],\n  paymentType: \"\"\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case ADD_ITEM_WITH_QUANTITY:\n      return { ...state,\n        cartItems: addItemAndQuantityToCart(state.cartItems, action.payload)\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        cartItems: deleteItemFromCart(state.cartItems, action.payload)\n      };\n\n    case DELETE_ALL_ITEM:\n      return { ...state,\n        cartItems: []\n      };\n\n    case CHECKED_ITEM:\n      return { ...state,\n        cartItems: checkedItem(state.cartItems, action.payload)\n      };\n\n    case CHECKED_ALL_ITEM:\n      return { ...state,\n        cartItems: checkedAllItems(state.cartItems)\n      };\n\n    case INCREASE_ITEM_QUANTITY:\n      return { ...state,\n        cartItems: increaseItemQuantity(state.cartItems, action.payload)\n      };\n\n    case DECREASE_ITEM_QUANTITY:\n      return { ...state,\n        cartItems: decreaseItemQuantity(state.cartItems, action.payload)\n      };\n\n    case SET_DELIVERY_TYPE:\n      return { ...state,\n        deliveryType: action.payload\n      };\n\n    case SET_PAYMENT_TYPE:\n      return { ...state,\n        paymentType: action.payload\n      };\n\n    case STATE_ITEM_TO_NEXT:\n      return { ...state,\n        cartItems: [...state.cartItems, action.payload.state++]\n      };\n\n    case STATE_ITEMS_TO_NEXT:\n      return { ...state,\n        cartItems: [...state.cartItems, action.payload.map(cartItem => cartItem.state++)]\n      };\n\n    case FINISHED_TRANSACTION:\n      return { ...state,\n        cartItems: [],\n        deliveryType: [],\n        paymentType: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/adjie/code/projects/PlantZo/client/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","addItemAndQuantityToCart","addItemToCart","checkedAllItems","checkedItem","decreaseItemQuantity","deleteItemFromCart","increaseItemQuantity","ADD_ITEM","ADD_ITEM_WITH_QUANTITY","DELETE_ITEM","DELETE_ALL_ITEM","CHECKED_ITEM","CHECKED_ALL_ITEM","INCREASE_ITEM_QUANTITY","DECREASE_ITEM_QUANTITY","SET_DELIVERY_TYPE","SET_PAYMENT_TYPE","STATE_ITEM_TO_NEXT","STATE_ITEMS_TO_NEXT","FINISHED_TRANSACTION","INITIAL_STATE","cartItems","deliveryType","paymentType","cartReducer","state","action","type","payload","map","cartItem"],"mappings":"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","sourcesContent":["import { cartActionTypes } from \"./cart.types\";\nimport {\n  addItemAndQuantityToCart,\n  addItemToCart,\n  checkedAllItems,\n  checkedItem,\n  decreaseItemQuantity,\n  deleteItemFromCart,\n  increaseItemQuantity,\n} from \"./cart.utils\";\n\nconst {\n  ADD_ITEM,\n  ADD_ITEM_WITH_QUANTITY,\n  DELETE_ITEM,\n  DELETE_ALL_ITEM,\n  CHECKED_ITEM,\n  CHECKED_ALL_ITEM,\n  INCREASE_ITEM_QUANTITY,\n  DECREASE_ITEM_QUANTITY,\n  SET_DELIVERY_TYPE,\n  SET_PAYMENT_TYPE,\n  STATE_ITEM_TO_NEXT,\n  STATE_ITEMS_TO_NEXT,\n  FINISHED_TRANSACTION,\n} = cartActionTypes;\n\nconst INITIAL_STATE = {\n  cartItems: [],\n  deliveryType: [],\n  paymentType: \"\",\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case ADD_ITEM_WITH_QUANTITY:\n      return {\n        ...state,\n        cartItems: addItemAndQuantityToCart(state.cartItems, action.payload),\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        cartItems: deleteItemFromCart(state.cartItems, action.payload),\n      };\n    case DELETE_ALL_ITEM:\n      return {\n        ...state,\n        cartItems: [],\n      };\n    case CHECKED_ITEM:\n      return {\n        ...state,\n        cartItems: checkedItem(state.cartItems, action.payload),\n      };\n    case CHECKED_ALL_ITEM:\n      return {\n        ...state,\n        cartItems: checkedAllItems(state.cartItems),\n      };\n    case INCREASE_ITEM_QUANTITY:\n      return {\n        ...state,\n        cartItems: increaseItemQuantity(state.cartItems, action.payload),\n      };\n    case DECREASE_ITEM_QUANTITY:\n      return {\n        ...state,\n        cartItems: decreaseItemQuantity(state.cartItems, action.payload),\n      };\n    case SET_DELIVERY_TYPE:\n      return {\n        ...state,\n        deliveryType: action.payload,\n      };\n    case SET_PAYMENT_TYPE:\n      return {\n        ...state,\n        paymentType: action.payload,\n      };\n\n    case STATE_ITEM_TO_NEXT:\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.payload.state++],\n      };\n    case STATE_ITEMS_TO_NEXT:\n      return {\n        ...state,\n        cartItems: [\n          ...state.cartItems,\n          action.payload.map((cartItem) => cartItem.state++),\n        ],\n      };\n    case FINISHED_TRANSACTION:\n      return {\n        ...state,\n        cartItems: [],\n        deliveryType: [],\n        paymentType: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}