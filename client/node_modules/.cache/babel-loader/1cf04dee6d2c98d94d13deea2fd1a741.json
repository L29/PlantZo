{"ast":null,"code":"import { cartActionTypes } from \"./cart.types\";\nconst {\n  ADD_ITEM,\n  ADD_ITEM_WITH_QUANTITY,\n  DELETE_ITEM,\n  DELETE_ALL_ITEM,\n  CHECKED_ITEM,\n  CHECKED_ALL_ITEM,\n  INCREASE_ITEM_QUANTITY,\n  DECREASE_ITEM_QUANTITY,\n  SET_DELIVERY_TYPE,\n  SET_PAYMENT_TYPE,\n  STATE_ITEM_TO_NEXT,\n  STATE_ITEMS_TO_NEXT,\n  FINISHED_TRANSACTION\n} = cartActionTypes;\nexport const addItem = item => ({\n  type: ADD_ITEM,\n  payload: item\n});\nexport const addItemWithQuantity = itemAndQuantity => ({\n  type: ADD_ITEM_WITH_QUANTITY,\n  payload: itemAndQuantity\n});\nexport const deleteItem = item => ({\n  type: DELETE_ITEM,\n  payload: item\n});\nexport const deleteAllItem = () => ({\n  type: DELETE_ALL_ITEM\n});\nexport const checkedItem = item => ({\n  type: CHECKED_ITEM,\n  payload: item\n});\nexport const checkedAllItems = () => ({\n  type: CHECKED_ALL_ITEM\n});\nexport const increaseItemQuantity = item => ({\n  type: INCREASE_ITEM_QUANTITY,\n  payload: item\n});\nexport const decreaseItemQuantity = item => ({\n  type: DECREASE_ITEM_QUANTITY,\n  payload: item\n});\nexport const setDeliveryType = delivery => ({\n  type: SET_DELIVERY_TYPE,\n  payload: delivery\n});\nexport const setPaymentType = payment => ({\n  type: SET_PAYMENT_TYPE,\n  payload: payment\n});\nexport const stateItemToNext = item => ({\n  type: STATE_ITEM_TO_NEXT,\n  payload: item\n});\nexport const stateItemsToNext = items => ({\n  type: STATE_ITEMS_TO_NEXT,\n  payload: items\n});\nexport const finishedTransaction = () => ({\n  type: FINISHED_TRANSACTION\n});","map":{"version":3,"sources":["/home/linuz/Desktop/Semester4/PlantZo/client/src/redux/cart/cart.actions.js"],"names":["cartActionTypes","ADD_ITEM","ADD_ITEM_WITH_QUANTITY","DELETE_ITEM","DELETE_ALL_ITEM","CHECKED_ITEM","CHECKED_ALL_ITEM","INCREASE_ITEM_QUANTITY","DECREASE_ITEM_QUANTITY","SET_DELIVERY_TYPE","SET_PAYMENT_TYPE","STATE_ITEM_TO_NEXT","STATE_ITEMS_TO_NEXT","FINISHED_TRANSACTION","addItem","item","type","payload","addItemWithQuantity","itemAndQuantity","deleteItem","deleteAllItem","checkedItem","checkedAllItems","increaseItemQuantity","decreaseItemQuantity","setDeliveryType","delivery","setPaymentType","payment","stateItemToNext","stateItemsToNext","items","finishedTransaction"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,MAAM;AACJC,EAAAA,QADI;AAEJC,EAAAA,sBAFI;AAGJC,EAAAA,WAHI;AAIJC,EAAAA,eAJI;AAKJC,EAAAA,YALI;AAMJC,EAAAA,gBANI;AAOJC,EAAAA,sBAPI;AAQJC,EAAAA,sBARI;AASJC,EAAAA,iBATI;AAUJC,EAAAA,gBAVI;AAWJC,EAAAA,kBAXI;AAYJC,EAAAA,mBAZI;AAaJC,EAAAA;AAbI,IAcFb,eAdJ;AAgBA,OAAO,MAAMc,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEf,QAD0B;AAEhCgB,EAAAA,OAAO,EAAEF;AAFuB,CAAX,CAAhB;AAKP,OAAO,MAAMG,mBAAmB,GAAIC,eAAD,KAAsB;AACvDH,EAAAA,IAAI,EAAEd,sBADiD;AAEvDe,EAAAA,OAAO,EAAEE;AAF8C,CAAtB,CAA5B;AAKP,OAAO,MAAMC,UAAU,GAAIL,IAAD,KAAW;AACnCC,EAAAA,IAAI,EAAEb,WAD6B;AAEnCc,EAAAA,OAAO,EAAEF;AAF0B,CAAX,CAAnB;AAKP,OAAO,MAAMM,aAAa,GAAG,OAAO;AAClCL,EAAAA,IAAI,EAAEZ;AAD4B,CAAP,CAAtB;AAIP,OAAO,MAAMkB,WAAW,GAAIP,IAAD,KAAW;AACpCC,EAAAA,IAAI,EAAEX,YAD8B;AAEpCY,EAAAA,OAAO,EAAEF;AAF2B,CAAX,CAApB;AAKP,OAAO,MAAMQ,eAAe,GAAG,OAAO;AACpCP,EAAAA,IAAI,EAAEV;AAD8B,CAAP,CAAxB;AAIP,OAAO,MAAMkB,oBAAoB,GAAIT,IAAD,KAAW;AAC7CC,EAAAA,IAAI,EAAET,sBADuC;AAE7CU,EAAAA,OAAO,EAAEF;AAFoC,CAAX,CAA7B;AAKP,OAAO,MAAMU,oBAAoB,GAAIV,IAAD,KAAW;AAC7CC,EAAAA,IAAI,EAAER,sBADuC;AAE7CS,EAAAA,OAAO,EAAEF;AAFoC,CAAX,CAA7B;AAKP,OAAO,MAAMW,eAAe,GAAIC,QAAD,KAAe;AAC5CX,EAAAA,IAAI,EAAEP,iBADsC;AAE5CQ,EAAAA,OAAO,EAAEU;AAFmC,CAAf,CAAxB;AAKP,OAAO,MAAMC,cAAc,GAAIC,OAAD,KAAc;AAC1Cb,EAAAA,IAAI,EAAEN,gBADoC;AAE1CO,EAAAA,OAAO,EAAEY;AAFiC,CAAd,CAAvB;AAKP,OAAO,MAAMC,eAAe,GAAIf,IAAD,KAAW;AACxCC,EAAAA,IAAI,EAAEL,kBADkC;AAExCM,EAAAA,OAAO,EAAEF;AAF+B,CAAX,CAAxB;AAKP,OAAO,MAAMgB,gBAAgB,GAAIC,KAAD,KAAY;AAC1ChB,EAAAA,IAAI,EAAEJ,mBADoC;AAE1CK,EAAAA,OAAO,EAAEe;AAFiC,CAAZ,CAAzB;AAKP,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AACxCjB,EAAAA,IAAI,EAAEH;AADkC,CAAP,CAA5B","sourcesContent":["import { cartActionTypes } from \"./cart.types\";\n\nconst {\n  ADD_ITEM,\n  ADD_ITEM_WITH_QUANTITY,\n  DELETE_ITEM,\n  DELETE_ALL_ITEM,\n  CHECKED_ITEM,\n  CHECKED_ALL_ITEM,\n  INCREASE_ITEM_QUANTITY,\n  DECREASE_ITEM_QUANTITY,\n  SET_DELIVERY_TYPE,\n  SET_PAYMENT_TYPE,\n  STATE_ITEM_TO_NEXT,\n  STATE_ITEMS_TO_NEXT,\n  FINISHED_TRANSACTION,\n} = cartActionTypes;\n\nexport const addItem = (item) => ({\n  type: ADD_ITEM,\n  payload: item,\n});\n\nexport const addItemWithQuantity = (itemAndQuantity) => ({\n  type: ADD_ITEM_WITH_QUANTITY,\n  payload: itemAndQuantity,\n});\n\nexport const deleteItem = (item) => ({\n  type: DELETE_ITEM,\n  payload: item,\n});\n\nexport const deleteAllItem = () => ({\n  type: DELETE_ALL_ITEM,\n});\n\nexport const checkedItem = (item) => ({\n  type: CHECKED_ITEM,\n  payload: item,\n});\n\nexport const checkedAllItems = () => ({\n  type: CHECKED_ALL_ITEM,\n});\n\nexport const increaseItemQuantity = (item) => ({\n  type: INCREASE_ITEM_QUANTITY,\n  payload: item,\n});\n\nexport const decreaseItemQuantity = (item) => ({\n  type: DECREASE_ITEM_QUANTITY,\n  payload: item,\n});\n\nexport const setDeliveryType = (delivery) => ({\n  type: SET_DELIVERY_TYPE,\n  payload: delivery,\n});\n\nexport const setPaymentType = (payment) => ({\n  type: SET_PAYMENT_TYPE,\n  payload: payment,\n});\n\nexport const stateItemToNext = (item) => ({\n  type: STATE_ITEM_TO_NEXT,\n  payload: item,\n});\n\nexport const stateItemsToNext = (items) => ({\n  type: STATE_ITEMS_TO_NEXT,\n  payload: items,\n});\n\nexport const finishedTransaction = () => ({\n  type: FINISHED_TRANSACTION,\n});\n"]},"metadata":{},"sourceType":"module"}