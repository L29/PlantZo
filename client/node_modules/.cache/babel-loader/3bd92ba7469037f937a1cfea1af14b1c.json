{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.pid === cartItemToAdd.pid);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.pid === cartItemToAdd.pid ? { ...cartItem,\n      quantityDesired: cartItem.quantityDesired + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantityDesired: 1,\n    checked: false\n  }];\n};\nexport const addItemAndQuantityToCart = (cartItems, itemAndQuantity) => {\n  const {\n    item,\n    itemQuantity\n  } = itemAndQuantity;\n  return [...cartItems, { ...item,\n    quantityDesired: itemQuantity,\n    checked: false,\n    state: 0\n  }];\n};\nexport const deleteItemFromCart = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.pid !== cartItemToClear.pid);\n};\nexport const checkedItem = (cartItems, cartItemToChecked) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.pid === cartItemToChecked.pid);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.pid === cartItemToChecked.pid ? { ...cartItem,\n      checked: !cartItem.checked\n    } : cartItem);\n  }\n\n  return { ...cartItemToChecked,\n    checked: false\n  };\n};\nexport const checkedAllItems = cartItems => {\n  const checkedAll = cartItems.filter(cartItem => cartItem.checked === true);\n\n  if (cartItems.length === checkedAll.length) {\n    return cartItems.map(cartItem => ({ ...cartItem,\n      checked: false\n    }));\n  }\n\n  return cartItems.map(cartItem => ({ ...cartItem,\n    checked: true\n  }));\n};\nexport const increaseItemQuantity = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.pid === cartItemToAdd.pid);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.pid === cartItemToAdd.pid ? { ...cartItem,\n      quantityDesired: cartItem.quantityDesired + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantityDesired: 1,\n    checked: false\n  }];\n};\nexport const decreaseItemQuantity = (cartItems, cartItemToDecrease) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.pid === cartItemToDecrease.pid);\n\n  if (existingCartItem.quantityDesired === 1) {\n    return deleteItemFromCart(cartItems, cartItemToDecrease);\n  }\n\n  return cartItems.map(cartItem => cartItem.pid === cartItemToDecrease.pid ? { ...cartItem,\n    quantityDesired: cartItem.quantityDesired - 1,\n    checked: false\n  } : cartItem);\n};","map":{"version":3,"sources":["/home/linuz/Desktop/Semester4/PlantZo/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","pid","map","quantityDesired","checked","addItemAndQuantityToCart","itemAndQuantity","item","itemQuantity","state","deleteItemFromCart","cartItemToClear","filter","checkedItem","cartItemToChecked","checkedAllItems","checkedAll","length","increaseItemQuantity","decreaseItemQuantity","cartItemToDecrease"],"mappings":"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","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.pid === cartItemToAdd.pid\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.pid === cartItemToAdd.pid\n        ? { ...cartItem, quantityDesired: cartItem.quantityDesired + 1 }\n        : cartItem\n    );\n  }\n\n  return [\n    ...cartItems,\n    { ...cartItemToAdd, quantityDesired: 1, checked: false },\n  ];\n};\n\nexport const addItemAndQuantityToCart = (cartItems, itemAndQuantity) => {\n  const { item, itemQuantity } = itemAndQuantity;\n\n  return [\n    ...cartItems,\n    {\n      ...item,\n      quantityDesired: itemQuantity,\n      checked: false,\n      state: 0,\n    },\n  ];\n};\n\nexport const deleteItemFromCart = (cartItems, cartItemToClear) => {\n  return cartItems.filter((cartItem) => cartItem.pid !== cartItemToClear.pid);\n};\n\nexport const checkedItem = (cartItems, cartItemToChecked) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.pid === cartItemToChecked.pid\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.pid === cartItemToChecked.pid\n        ? { ...cartItem, checked: !cartItem.checked }\n        : cartItem\n    );\n  }\n\n  return { ...cartItemToChecked, checked: false };\n};\n\nexport const checkedAllItems = (cartItems) => {\n  const checkedAll = cartItems.filter((cartItem) => cartItem.checked === true);\n\n  if (cartItems.length === checkedAll.length) {\n    return cartItems.map((cartItem) => ({\n      ...cartItem,\n      checked: false,\n    }));\n  }\n\n  return cartItems.map((cartItem) => ({\n    ...cartItem,\n    checked: true,\n  }));\n};\n\nexport const increaseItemQuantity = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.pid === cartItemToAdd.pid\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.pid === cartItemToAdd.pid\n        ? { ...cartItem, quantityDesired: cartItem.quantityDesired + 1 }\n        : cartItem\n    );\n  }\n\n  return [\n    ...cartItems,\n    { ...cartItemToAdd, quantityDesired: 1, checked: false },\n  ];\n};\n\nexport const decreaseItemQuantity = (cartItems, cartItemToDecrease) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.pid === cartItemToDecrease.pid\n  );\n\n  if (existingCartItem.quantityDesired === 1) {\n    return deleteItemFromCart(cartItems, cartItemToDecrease);\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.pid === cartItemToDecrease.pid\n      ? {\n          ...cartItem,\n          quantityDesired: cartItem.quantityDesired - 1,\n          checked: false,\n        }\n      : cartItem\n  );\n};\n"]},"metadata":{},"sourceType":"module"}