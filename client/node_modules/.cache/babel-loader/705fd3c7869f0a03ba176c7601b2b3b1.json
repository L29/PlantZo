{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectDeliveryType = createSelector([selectCart], cart => cart.deliveryType);\nexport const selectPaymentType = createSelector([selectCart], cart => cart.paymentType);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantityDesired, 0));\nexport const selectCartItemsTotal = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => cartItem.checked === true).reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantityDesired * cartItem.price, 0));\nexport const selectCartItemsChecked = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => cartItem.checked === true));\nexport const selectCartItemsInCart = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => selectItemStateNumberToString(cartItem.state) === \"INCART\"));\nexport const selectCartItemsInUnPaid = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => selectItemStateNumberToString(cartItem.state) === \"UNPAID\"));\nexport const selectCartItemsInPack = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => selectItemStateNumberToString(cartItem.state) === \"PACK\"));\nexport const selectCartItemsInSend = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => selectItemStateNumberToString(cartItem.state) === \"SEND\"));\nexport const selectCartItemsInRate = createSelector([selectCartItems], cartItems => cartItems.filter(cartItem => selectItemStateNumberToString(cartItem.state) === \"RATE\"));\nexport const selectCartItemsInUnPaidQuantity = createSelector([selectCartItemsInUnPaid], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantityDesired, 0));\nexport const selectCartItemsInPackQuantity = createSelector([selectCartItemsInPack], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantityDesired, 0));\nexport const selectCartItemsInSendQuantity = createSelector([selectCartItemsInSend], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantityDesired, 0));\nexport const selectCartItemsInRateQuantity = createSelector([selectCartItemsInRate], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantityDesired, 0));\nexport const selectItemStateNumberToString = [\"INCART\", \"UNPAID\", \"PACK\", \"SEND\", \"RATE\"];","map":{"version":3,"sources":["/home/adjie/code/projects/PlantZo/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectDeliveryType","deliveryType","selectPaymentType","paymentType","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantityDesired","selectCartItemsTotal","filter","checked","price","selectCartItemsChecked","selectCartItemsInCart","selectItemStateNumberToString","selectCartItemsInUnPaid","selectCartItemsInPack","selectCartItemsInSend","selectCartItemsInRate","selectCartItemsInUnPaidQuantity","selectCartItemsInPackQuantity","selectCartItemsInSendQuantity","selectCartItemsInRateQuantity"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,kBAAkB,GAAGN,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE7CE,IAAD,IAAUA,IAAI,CAACI,YAF+B,CAAzC;AAKP,OAAO,MAAMC,iBAAiB,GAAGR,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE5CE,IAAD,IAAUA,IAAI,CAACM,WAF8B,CAAxC;AAKP,OAAO,MAAMC,oBAAoB,GAAGV,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CAACM,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,eAFnC,EAGE,CAHF,CAH8C,CAA3C;AAUP,OAAO,MAAMC,oBAAoB,GAAGf,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CACNW,MADH,CACWH,QAAD,IAAcA,QAAQ,CAACI,OAAT,KAAqB,IAD7C,EAEGN,MAFH,CAGI,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,eAAT,GAA2BD,QAAQ,CAACK,KAJhE,EAKI,CALJ,CAH8C,CAA3C;AAYP,OAAO,MAAMC,sBAAsB,GAAGnB,cAAc,CAClD,CAACI,eAAD,CADkD,EAEjDC,SAAD,IAAeA,SAAS,CAACW,MAAV,CAAkBH,QAAD,IAAcA,QAAQ,CAACI,OAAT,KAAqB,IAApD,CAFmC,CAA7C;AAKP,OAAO,MAAMG,qBAAqB,GAAGpB,cAAc,CACjD,CAACI,eAAD,CADiD,EAEhDC,SAAD,IACEA,SAAS,CAACW,MAAV,CACGH,QAAD,IAAcQ,6BAA6B,CAACR,QAAQ,CAACX,KAAV,CAA7B,KAAkD,QADlE,CAH+C,CAA5C;AAQP,OAAO,MAAMoB,uBAAuB,GAAGtB,cAAc,CACnD,CAACI,eAAD,CADmD,EAElDC,SAAD,IACEA,SAAS,CAACW,MAAV,CACGH,QAAD,IAAcQ,6BAA6B,CAACR,QAAQ,CAACX,KAAV,CAA7B,KAAkD,QADlE,CAHiD,CAA9C;AAQP,OAAO,MAAMqB,qBAAqB,GAAGvB,cAAc,CACjD,CAACI,eAAD,CADiD,EAEhDC,SAAD,IACEA,SAAS,CAACW,MAAV,CACGH,QAAD,IAAcQ,6BAA6B,CAACR,QAAQ,CAACX,KAAV,CAA7B,KAAkD,MADlE,CAH+C,CAA5C;AAQP,OAAO,MAAMsB,qBAAqB,GAAGxB,cAAc,CACjD,CAACI,eAAD,CADiD,EAEhDC,SAAD,IACEA,SAAS,CAACW,MAAV,CACGH,QAAD,IAAcQ,6BAA6B,CAACR,QAAQ,CAACX,KAAV,CAA7B,KAAkD,MADlE,CAH+C,CAA5C;AAQP,OAAO,MAAMuB,qBAAqB,GAAGzB,cAAc,CACjD,CAACI,eAAD,CADiD,EAEhDC,SAAD,IACEA,SAAS,CAACW,MAAV,CACGH,QAAD,IAAcQ,6BAA6B,CAACR,QAAQ,CAACX,KAAV,CAA7B,KAAkD,MADlE,CAH+C,CAA5C;AAQP,OAAO,MAAMwB,+BAA+B,GAAG1B,cAAc,CAC3D,CAACsB,uBAAD,CAD2D,EAE1DjB,SAAD,IACEA,SAAS,CAACM,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,eAFnC,EAGE,CAHF,CAHyD,CAAtD;AAUP,OAAO,MAAMa,6BAA6B,GAAG3B,cAAc,CACzD,CAACuB,qBAAD,CADyD,EAExDlB,SAAD,IACEA,SAAS,CAACM,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,eAFnC,EAGE,CAHF,CAHuD,CAApD;AAUP,OAAO,MAAMc,6BAA6B,GAAG5B,cAAc,CACzD,CAACwB,qBAAD,CADyD,EAExDnB,SAAD,IACEA,SAAS,CAACM,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,eAFnC,EAGE,CAHF,CAHuD,CAApD;AAUP,OAAO,MAAMe,6BAA6B,GAAG7B,cAAc,CACzD,CAACyB,qBAAD,CADyD,EAExDpB,SAAD,IACEA,SAAS,CAACM,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,eAFnC,EAGE,CAHF,CAHuD,CAApD;AAUP,OAAO,MAAMO,6BAA6B,GAAG,CAC3C,QAD2C,EAE3C,QAF2C,EAG3C,MAH2C,EAI3C,MAJ2C,EAK3C,MAL2C,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = (state) => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n);\n\nexport const selectDeliveryType = createSelector(\n  [selectCart],\n  (cart) => cart.deliveryType\n);\n\nexport const selectPaymentType = createSelector(\n  [selectCart],\n  (cart) => cart.paymentType\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantityDesired,\n      0\n    )\n);\n\nexport const selectCartItemsTotal = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems\n      .filter((cartItem) => cartItem.checked === true)\n      .reduce(\n        (accumulatedQuantity, cartItem) =>\n          accumulatedQuantity + cartItem.quantityDesired * cartItem.price,\n        0\n      )\n);\n\nexport const selectCartItemsChecked = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.filter((cartItem) => cartItem.checked === true)\n);\n\nexport const selectCartItemsInCart = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.filter(\n      (cartItem) => selectItemStateNumberToString(cartItem.state) === \"INCART\"\n    )\n);\n\nexport const selectCartItemsInUnPaid = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.filter(\n      (cartItem) => selectItemStateNumberToString(cartItem.state) === \"UNPAID\"\n    )\n);\n\nexport const selectCartItemsInPack = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.filter(\n      (cartItem) => selectItemStateNumberToString(cartItem.state) === \"PACK\"\n    )\n);\n\nexport const selectCartItemsInSend = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.filter(\n      (cartItem) => selectItemStateNumberToString(cartItem.state) === \"SEND\"\n    )\n);\n\nexport const selectCartItemsInRate = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.filter(\n      (cartItem) => selectItemStateNumberToString(cartItem.state) === \"RATE\"\n    )\n);\n\nexport const selectCartItemsInUnPaidQuantity = createSelector(\n  [selectCartItemsInUnPaid],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantityDesired,\n      0\n    )\n);\n\nexport const selectCartItemsInPackQuantity = createSelector(\n  [selectCartItemsInPack],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantityDesired,\n      0\n    )\n);\n\nexport const selectCartItemsInSendQuantity = createSelector(\n  [selectCartItemsInSend],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantityDesired,\n      0\n    )\n);\n\nexport const selectCartItemsInRateQuantity = createSelector(\n  [selectCartItemsInRate],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuantity, cartItem) =>\n        accumulatedQuantity + cartItem.quantityDesired,\n      0\n    )\n);\n\nexport const selectItemStateNumberToString = [\n  \"INCART\",\n  \"UNPAID\",\n  \"PACK\",\n  \"SEND\",\n  \"RATE\",\n];\n"]},"metadata":{},"sourceType":"module"}